<?php
define('APPLICATION_NAME','inroads');
define('APPLICATION_HOST', $_SERVER['SERVER_NAME']);
define('APPLICATION_DESCRIPTION', 'description');

// Replace this value with your city's Twitter handle
define('APPLICATION_TWITTER_SITE', '@twitter_handle');

/**
 * URL Generation settings
 *
 * Do NOT use trailing slashes
 *
 * If your site is being proxied, set the PROXY_HOST to the DNS name
 * of the proxy server.  PROXY_URL will be used instead of BASE_URL
 * in non-web contexts, such as email notifications.
 */
define('BASE_URI' , '/inroads');
#define('PROXY_HOST', 'some.host.org');
#define('PROXY_URL', 'https://'.PROXY_HOST.BASE_URI);
define('BASE_HOST', (defined('PROXY_HOST')
                        && isset($_SERVER['HTTP_X_FORWARDED_HOST'])
                        &&       $_SERVER['HTTP_X_FORWARDED_HOST'] == PROXY_HOST)
                    ? PROXY_HOST
                    : $_SERVER['SERVER_NAME']);
define('BASE_URL' , "https://".BASE_HOST.BASE_URI);

/**
 * Specify the theme directory
 *
  * Remember to create a symbolic link in public/css to the theme CSS
  * that you declare here.
 *
 * A theme can consist of templates, blocks which will override core.
 * The current theme's screen.css will be included in the HTML head.
 */
//define('THEME', 'cob');

/**
 * Javascript APIs
 */
define('OPENLAYERS', BASE_URI.'/js/vendor/ol3');
$MAPLAYERS = [
    [
        'source'  => 'OSM',
        'options' => []
    ]
];


/**
 * Database Setup
 */
$DATABASES = [
    'default' => [
        'driver'   => 'Pdo_Mysql',
        'dsn'      => 'mysql:dbname=inroads;host=localhost',
        'username' => 'user',
        'password' => 'pass',
        'options'  => []
    ]
];

define('GOOGLE_CREDENTIALS_FILE', __DIR__.'/credentials.json');
define('GOOGLE_CALENDAR_ID', '--some-calendar-id--@group.calendar.google.com');
define('GOOGLE_USER_EMAIL', 'username@gmail.com');
define('GOOGLE_GROUP', 'groupname@googlegroups.com');

define('ADDRESS_SERVICE', 'http://localhost/master_address');

/**
 * Authentication Configuration
 *
 * This supports doing user authentication from multiple external
 * directories, such as LDAP or ADS. This is required since city staff
 * are in a seperate LDAP directory from public user accounts.
 * Classes that implement AuthenticationInterface should have an entry here.
 *
 * @see Domain\Auth
 */
$AUTHENTICATION_METHODS = [
//  'ActiveDirectory' => [
//      'classname'          => 'Site\Employee',
//      'server'             => 'ldaps://example.org:636',
//      'base_dn'            => 'OU=Department,DC=example,DC=org',
//      'username_attribute' => 'CN',
//      'user_binding'       => '{username}@example.org',
//      'admin_binding'      => 'admin@example.org',
//      'admin_pass'         => 'password'
//  ]
//
//  'Ldap' => [
//      'classname'          => 'Site\Employee',
//      'server'             => 'ldaps://example.org:636',
//      'base_dn'            => 'ou=people,o=ldap.domain.somewhere',
//      'username_attribute' => 'uid',
//      'user_binding'       => 'uid={username},'.DIRECTORY_BASE_DN,
//      'admin_binding'      => 'uid=admin,'.DIRECTORY_BASE_DN,
//      'admin_pass'         => 'password',
//  ]
//  'Employee' => [
//      'classname' => 'Site\Employee',
//      'server'    => 'http://localhost/directory',
//  ]
];

/**
 * CAS authentication http://www.jasig.org/cas
 *
 * https://wiki.jasig.org/display/CASC/phpCAS
 *
 * phpCAS is a PHP library for handling the calls to the CAS service
 * It is the official library, part of the Jasig CAS project
 *
 * Comment this out to disable CAS authentication
 * Uncomment to enable
 */
//define('CAS_SERVER','cas.somewhere.org');
//define('CAS_URI','cas');

/**
 * Auth0 authentication https://auth0.com
 *
 * Comment this out to disable Auth0 authentication
 * Uncomment to enable
 */
//$AUTH0 = [
//    'domain'        => 'somewhere.auth0.com',
//    'client_id'     => 'HASH CODE',
//    'client_secret' => 'SECRET API KEY'
//];

/**
 * Controls whether the system sends email notifications to people
 *
 * Notifications will be sent using the ADMINISTRATOR_EMAIL as the FROM
 */
//define('NOTIFICATIONS_ENABLED', true);
define('NOTIFICATIONS_EMAIL','admin@servername.com');
define('SMTP_HOST', 'localhost.localdomain');
define('SMTP_PORT', 25);

define('DATE_FORMAT', 'n/j/Y');
define('TIME_FORMAT', 'H:i a');
define('DATETIME_FORMAT', 'n/j/Y H:i a');
define('LOCALE', 'en_US');

/**
 * Graylog is a centralized log manager
 *
 * This application supports sending errors and exceptions to a graylog instance.
 * This is handy for notifying developers of a problem before users notice.
 ** @see https://graylog.org
 */
define('GRAYLOG_DOMAIN', 'graylog.example.org');
define('GRAYLOG_PORT',   12200);
